{"version":3,"sources":["components/Navbar.jsx","components/home_components/jumbotron.jsx","views/Home.jsx","views/Commands.jsx","views/Invite.jsx","App.jsx","serviceWorker.js","index.js"],"names":["Navigationbar","this","props","isDash","Navbar","bg","expand","className","Brand","title","Toggle","aria-controls","Collapse","id","Nav","Link","NavDropdown","Item","Divider","href","to","React","Component","Jumbo","Jumbotron","fluid","Container","content","Home","Commands","Invite","App","path","exact","component","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","StrictMode","document","getElementById","URL","process","origin","addEventListener","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.6f1c9b38.chunk.js","sourcesContent":["import React from 'react';\r\nimport {Link} from 'react-router-dom'\r\nimport {Navbar,Nav,NavDropdown} from 'react-bootstrap';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport {FaRobot} from 'react-icons/fa';\r\nimport {FcHome,FcInvite,FcRules} from 'react-icons/fc';\r\nimport {VscSettings} from 'react-icons/vsc';\r\nimport {DiCodeBadge} from 'react-icons/di';\r\n\r\nclass Navigationbar extends React.Component {\r\n  render() {\r\n    if (this.props.isDash > 0) {\r\n      return (\r\n        <div>\r\n      <Navbar bg=\"light\" expand=\"lg\" className=\"shadow p-3 mb-5 bg-white rounded\">\r\n        <Navbar.Brand>\r\n        <FaRobot className=\"mr-2\"/> Neon - {this.props.title || \"Dashboard\"}\r\n        </Navbar.Brand>\r\n        <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n        <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n          <Nav className=\"mr-auto nav-tabs\">\r\n            <Nav.Link className=\"active\"><FcHome className=\"mr-2\"/>Home</Nav.Link>\r\n            <Nav.Link><VscSettings className=\"mr-2\"/>Settings</Nav.Link>\r\n            <NavDropdown title=\"Support\" id=\"basic-nav-dropdown\">\r\n              <NavDropdown.Item>fghjgj</NavDropdown.Item>\r\n              <NavDropdown.Item>fghgj action</NavDropdown.Item>\r\n              <NavDropdown.Item>Something</NavDropdown.Item>\r\n              <NavDropdown.Divider />\r\n              <NavDropdown.Item>Separated link</NavDropdown.Item>\r\n            </NavDropdown>\r\n          </Nav>\r\n        </Navbar.Collapse>\r\n      </Navbar>\r\n    </div>\r\n\r\n      );\r\n    }else {\r\n      return (\r\n        <Navbar bg=\"light\" expand=\"lg\" className=\"shadow p-3 mb-5 bg-white rounded\">\r\n        <Navbar.Brand href=\"/\">\r\n        <FaRobot className=\"mr-2\"/>\r\n         Neon - {this.props.title || \"Dashboard\"}\r\n        </Navbar.Brand>\r\n        <Navbar.Toggle aria-controls=\"responsive-navbar-nav2\" />\r\n        <Navbar.Collapse id=\"responsive-navbar-nav2\">\r\n          <Nav className=\"mr-auto nav-tabs\">\r\n            <Link className=\"nav-link\" to=\"/\"><FcHome className=\"mr-2\"/>Home</Link>\r\n            <Link className=\"nav-link\" to=\"/invite\"><FcInvite className=\"mr-2\"/>Invite</Link>\r\n            <Link className=\"nav-link\" to=\"/commands\"><FcRules className=\"mr-2\"/>Commands</Link>\r\n            <NavDropdown title={\"👩‍💻Support\"} id=\"basic-nav-dropdown\">\r\n              <Link className=\"dropdown-item\" to=\"/teszt\"><DiCodeBadge className =\"mr-2\"/>Developers</Link>\r\n              <Link className=\"dropdown-item\" to=\"/teszt\">Another action</Link>\r\n              <Link className=\"dropdown-item\" to=\"/teszt\">Something</Link>\r\n              <NavDropdown.Divider />\r\n              <Link className=\"dropdown-item\" to=\"/teszt\">Separated link</Link>\r\n            </NavDropdown>\r\n          </Nav>\r\n        </Navbar.Collapse>\r\n      </Navbar>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nexport default Navigationbar;","\r\nimport React from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport Jumbotron from 'react-bootstrap/Jumbotron'\r\nimport Container from 'react-bootstrap/Container'\r\n\r\nclass Jumbo extends React.Component {\r\n    render() {\r\n      return(\r\n    <Jumbotron fluid>\r\n        <Container>\r\n        <h1>{this.props.title}</h1>\r\n            <p>\r\n            {this.props.content}\r\n            </p>\r\n        </Container>\r\n    </Jumbotron>\r\n      )\r\n  }\r\n}\r\n\r\nexport default Jumbo","import React from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport JumpbotronPage from '../components/home_components/jumbotron'\r\n\r\nclass Home extends React.Component {\r\n    render() {\r\n      return(\r\n        <div className=\"home-view\">\r\n            <JumpbotronPage title=\"First\" content=\"Az oldal még nincs kész, hiszen még épül. -.-'\"/>\r\n        </div>\r\n      )\r\n  }\r\n}\r\n\r\nexport default Home;","import React from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport JumpbotronPage from '../components/home_components/jumbotron'\r\n\r\nclass Commands extends React.Component {\r\n    render() {\r\n      return(\r\n        <div className=\"commands-view\">\r\n            <JumpbotronPage title=\"Parancsok\" content=\"Itt lesznek a parancsok...\"/>\r\n        </div>\r\n      )\r\n  }\r\n}\r\n\r\nexport default Commands;","import React from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport JumpbotronPage from '../components/home_components/jumbotron'\r\n\r\nclass Invite extends React.Component {\r\n    render() {\r\n      return(\r\n        <div className=\"commands-view\">\r\n            <JumpbotronPage title=\"Meghívás\" content=\"Hívd meg te is szerveredre..\"/>\r\n        </div>\r\n      )\r\n  }\r\n}\r\n\r\nexport default Invite;","import React from 'react'\nimport {BrowserRouter as Router , Switch , Route} from 'react-router-dom'\nimport Navigationbar from './components/Navbar'\nimport Home from './views/Home.jsx';\nimport Commands from './views/Commands.jsx';\nimport Invite from './views/Invite.jsx';\nfunction App() {\n  return (\n    <Router>\n      <div className=\"App\">\n        <Navigationbar title=\"\" isDash = \"0\"></Navigationbar>\n        <Switch>\n          <Route path=\"/\" exact component={Home} title=\"\"/>\n          <Route path=\"/commands\" exact component={Commands} title=\"\"/>\n          <Route path=\"/invite\" exact component={Invite} title=\"\"/>\n        </Switch>\n      </div>\n    </Router>\n  );\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'Ez a weboldal helyi gyorsítótárból lett betöltve.' +\n              'Tudj meg többet: https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}